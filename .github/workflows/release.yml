name: Build and Release Chronos-rs

on:
  push:
    tags:
      - "v*.*.*" 

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: chronos-rs
            archive_name: chronos-rs.tar.gz
          - os: macos-latest
            artifact_name: chronos-rs
            archive_name: chronos-rs.zip

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build Release
        run: cargo build --release

      - name: Package Binary
        run: |

          mkdir -p dist
          cp target/release/${{ matrix.artifact_name }} dist/
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            zip -r ${{ matrix.artifact_name }}.zip dist/${{ matrix.artifact_name }}
          else
            tar -czvf ${{ matrix.archive_name }} -C dist ${{ matrix.artifact_name }}
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.archive_name }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Built Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
